openapi: 3.0.3
info:
    title: 'API estoqueintegrado.com'
    description: ''
    version: 1.0.0
servers:
    -
        url: 'https://api.estoqueintegrado.com.br'
paths:
    /v1/cart:
        post:
            summary: 'Criar item no carrinho'
            description: 'Cria um item no carrinho'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    user_id: 3
                                    empresa_id: 2
                                    produto_id: 2313
                                    cor_id: null
                                    tamanho_id: 645
                                    quantidade: 1
                                    valor_produto: 199.88
                                    subtotal: 199.88
                                properties:
                                    id: { type: integer, example: 1 }
                                    user_id: { type: integer, example: 3 }
                                    empresa_id: { type: integer, example: 2 }
                                    produto_id: { type: integer, example: 2313 }
                                    cor_id: { type: string, example: null }
                                    tamanho_id: { type: integer, example: 645 }
                                    quantidade: { type: integer, example: 1 }
                                    valor_produto: { type: number, example: 199.88 }
                                    subtotal: { type: number, example: 199.88 }
            tags:
                - Carrinho
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: sit
                                produto_id:
                                    type: integer
                                    description: 'ID do produto'
                                    example: 2
                                cor_id:
                                    type: integer
                                    description: 'ID da cor'
                                    example: 2
                                tamanho_id:
                                    type: integer
                                    description: 'ID da tamanho'
                                    example: 20
                                quantidade:
                                    type: integer
                                    description: 'Quantidade de produtos'
                                    example: 15
                            required:
                                - api_token
                                - dominio
                                - produto_id
                                - quantidade
    /v1/cart/sum:
        post:
            summary: 'Aumentar quantidade item carrinho'
            description: 'Soma 1 ao valor da quantidade do item do carrinho'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    user_id: 3
                                    empresa_id: 2
                                    produto_id: 2313
                                    cor_id: null
                                    tamanho_id: 645
                                    quantidade: 1
                                    valor_produto: 199.88
                                    subtotal: 199.88
                                properties:
                                    id: { type: integer, example: 1 }
                                    user_id: { type: integer, example: 3 }
                                    empresa_id: { type: integer, example: 2 }
                                    produto_id: { type: integer, example: 2313 }
                                    cor_id: { type: string, example: null }
                                    tamanho_id: { type: integer, example: 645 }
                                    quantidade: { type: integer, example: 1 }
                                    valor_produto: { type: number, example: 199.88 }
                                    subtotal: { type: number, example: 199.88 }
            tags:
                - Carrinho
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: tempore
                                product_id:
                                    type: integer
                                    description: 'ID do produto'
                                    example: 18
                                cor_id:
                                    type: integer
                                    description: 'ID da cor'
                                    example: 5
                                tamanho_id:
                                    type: integer
                                    description: 'ID da tamanho'
                                    example: 13
                            required:
                                - api_token
                                - dominio
                                - product_id
    /v1/cart/reduce:
        post:
            summary: 'Diminuir quantidade item carrinho'
            description: 'reduz 1 do valor da quantidade do item do carrinho'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    id: 1
                                    user_id: 3
                                    empresa_id: 2
                                    produto_id: 2313
                                    cor_id: null
                                    tamanho_id: 645
                                    quantidade: 1
                                    valor_produto: 199.88
                                    subtotal: 199.88
                                properties:
                                    id: { type: integer, example: 1 }
                                    user_id: { type: integer, example: 3 }
                                    empresa_id: { type: integer, example: 2 }
                                    produto_id: { type: integer, example: 2313 }
                                    cor_id: { type: string, example: null }
                                    tamanho_id: { type: integer, example: 645 }
                                    quantidade: { type: integer, example: 1 }
                                    valor_produto: { type: number, example: 199.88 }
                                    subtotal: { type: number, example: 199.88 }
            tags:
                - Carrinho
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: cum
                                product_id:
                                    type: integer
                                    description: 'ID do produto'
                                    example: 3
                                cor_id:
                                    type: integer
                                    description: 'ID da cor'
                                    example: 18
                                tamanho_id:
                                    type: integer
                                    description: 'ID da tamanho'
                                    example: 3
                            required:
                                - api_token
                                - dominio
                                - product_id
    '/v1/cart/{id}':
        delete:
            summary: 'Deletar item do carrinho'
            description: 'Deleta um item do carrinho'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"message\":\"Produto deletado do carrinho!\",\n}"
            tags:
                - Carrinho
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: exercitationem
                            required:
                                - api_token
                                - dominio
        parameters:
            -
                in: path
                name: id
                description: 'ID do carrinho'
                example: 14
                required: true
                schema:
                    type: integer
    /v1/categories:
        post:
            summary: 'Criar categoria'
            description: 'Cria uma categoria'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\": \"Nome da categoria\",\n     \"slug\": \"produtos-banho\",\n     \"imagem\": \"caminho/da/imagem\"\n     [...]\n}"
            tags:
                - Categorias
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: in
                                nome:
                                    type: string
                                    description: 'Nome da categoria'
                                    example: dolores
                                slug:
                                    type: string
                                    description: "Slug do produto.\n<br>Caracteres permitidos: número, texto, \"-\", \"_\" <br><i><small>Ex: casa-e-jardim | casa_e_jardim</small></i>"
                                    example: non
                                descricao:
                                    type: string
                                    description: 'Descrição da categoria'
                                    example: et
                                imagem:
                                    type: string
                                    format: binary
                                    description: 'Imagem da categoria'
                                miniatura:
                                    type: string
                                    format: binary
                                    description: 'Miniatura da imagem da categoria'
                                ativo:
                                    type: boolean
                                    description: 'Status do produto <br><i><small>Ativo = 1, Desativado = 0. Default 1</small></i>'
                                    example: true
                                slug_auto:
                                    type: boolean
                                    description: 'Criar slug automaticamente; <br><i><small>Sim = 1, Não = 0</small></i>'
                                    example: true
                            required:
                                - api_token
                                - dominio
                                - nome
                                - slug
    '/v1/categories/{id}':
        put:
            summary: 'Atualizar Categoria'
            description: 'Atualiza os dados da categoria'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: multipart/form-data
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\": \"Nome da categoria\",\n     \"slug\": \"produtos-beleza\",\n     \"imagem\": \"caminho/da/imagem\"\n     [...]\n}"
            tags:
                - Categorias
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: qui
                                nome:
                                    type: string
                                    description: 'Nome da categoria'
                                    example: modi
                                slug:
                                    type: string
                                    description: 'Slug do produto <br><i><small>Ex: calca_preta_jean</i></small>'
                                    example: iusto
                                descricao:
                                    type: string
                                    description: 'Descrição da categoria'
                                    example: laborum
                                imagem:
                                    type: string
                                    format: binary
                                    description: 'Imagem da categoria'
                                miniatura:
                                    type: string
                                    format: binary
                                    description: 'Miniatura da imagem da categoria'
                                ativo:
                                    type: boolean
                                    description: 'Status da categoria <br><i><small>Ativo = 1, Desativado = 0. Default 1</i></small>'
                                    example: false
                            required:
                                - api_token
                                - dominio
                                - nome
        get:
            summary: 'Detalhes Categoria'
            description: 'Retorna os detalhes da categoria'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\": \"Nome da categoria\",\n     \"slug\": \"produtos-beleza\",\n     \"imagem\": \"caminho/da/imagem\"\n     [...]\n}"
            tags:
                - Categorias
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: quaerat
                            required:
                                - api_token
                                - dominio
        delete:
            summary: 'Deletar Categoria'
            description: 'Deleta a categoria'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"message\": \"Categoria deletada!\",\n}"
            tags:
                - Categorias
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: est
                            required:
                                - api_token
                                - dominio
        parameters:
            -
                in: path
                name: id
                description: 'ID da categoria'
                example: 4
                required: true
                schema:
                    type: integer
    /v1/colors:
        post:
            summary: 'Criar Cor'
            description: 'Cria uma cor'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\": \"Preto\",\n     \"hex\": #000000,\n}"
            tags:
                - Cores
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: ea
                                nome:
                                    type: string
                                    description: 'Nome do tamanho <small>Ex: 50ml|P|300g</small>'
                                    example: maiores
                                hex:
                                    type: string
                                    description: 'Hexadecimal da cor Ex: #000000'
                                    example: et
                            required:
                                - api_token
                                - dominio
                                - nome
                                - hex
    '/v1/colors/{id}':
        put:
            summary: 'Atualizar Cor'
            description: 'Atualiza os dados da cor'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\": \"Preto\",\n     \"hex\": #000000,\n}"
            tags:
                - Cores
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: est
                                nome:
                                    type: string
                                    description: 'Nome do tamanho <small>Ex: 50ml|P|300g</small>'
                                    example: minima
                                hex:
                                    type: string
                                    description: 'Hexadecimal da cor Ex: #000000'
                                    example: velit
                            required:
                                - api_token
                                - dominio
                                - nome
                                - hex
        get:
            summary: 'Detalhes Cor'
            description: 'Retorna os detalhes da Cor'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\": \"Preto\",\n     \"empresa_id\": 322,\n}"
            tags:
                - Cores
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: quae
                            required:
                                - api_token
                                - dominio
        delete:
            summary: 'Deletar Cor'
            description: 'Deleta uma cor'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"message\": \"Cor deletada!\",\n}"
            tags:
                - Cores
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: doloribus
                            required:
                                - api_token
                                - dominio
        parameters:
            -
                in: path
                name: id
                description: ''
                example: aliquam
                required: true
                schema:
                    type: string
    /v1/companies:
        post:
            summary: 'Criar empresa.'
            description: 'Cria uma nova empresa.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\":1,\n     \"nome\":\"Nome da empresa\",\n     \"website\":\"Domínio da empresa\",\n     [...]\n}"
            tags:
                - Empresas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: sit
                                user_id:
                                    type: integer
                                    description: 'ID do usuario proprietario da empresa'
                                    example: 9
                                nome:
                                    type: string
                                    description: 'Nome fantasia da empresa'
                                    example: in
                                website:
                                    type: string
                                    description: 'URL customizada da empresa Ex: minhaloja.estoqueintegrado.com|minhaloja.com.br'
                                    example: qui
                                razao_social:
                                    type: string
                                    description: 'Razão social da empresa'
                                    example: accusantium
                                cnpj:
                                    type: string
                                    description: 'CNPJ da empresa com ou sem formatação'
                                    example: quam
                                telefone:
                                    type: string
                                    description: 'Telefone da empresa'
                                    example: excepturi
                                celular:
                                    type: string
                                    description: 'Celular da empresa'
                                    example: sint
                                email:
                                    type: string
                                    description: 'Email da empresa'
                                    example: accusantium
                                logo:
                                    type: string
                                    description: 'Path do caminho da logo salva'
                                    example: dolorum
                                icone:
                                    type: string
                                    description: 'Path do ícone da empresa'
                                    example: commodi
                                matriz:
                                    type: boolean
                                    description: 'Se essa empresa é matriz(1) ou filial (0)'
                                    example: true
                                modo_catalogo:
                                    type: boolean
                                    description: 'Exibir banners na loja. 1 = sim, 0 = não. Default 0'
                                    example: true
                            required:
                                - api_token
                                - dominio
                                - user_id
                                - nome
                                - cnpj
    /v1/my-companies:
        get:
            summary: 'Lista de empresas do usuario.'
            description: 'Retorna a lista de empresas que o usuário está associado.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "[{\n     \"id\":1,\n     \"nome\":\"Nome da empresa\",\n     \"website\":\"Domínio da empresa\",\n     [...]\n},\n{\n     \"id\":2,\n     \"nome\":\"Nome da empresa\",\n     \"website\":\"Domínio da empresa\",\n     [...]\n}]"
            tags:
                - Empresas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                id:
                                    type: integer
                                    description: 'ID do usuario'
                                    example: 14
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: molestiae
                            required:
                                - api_token
                                - id
                                - dominio
    '/v1/companies/{id}':
        put:
            summary: 'Atualizar empresa.'
            description: "Atualiza dados da empresa.\nUsa softDeletes()"
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\n     \"id\":1,\n     \"nome\":\"Nome da empresa\",\n     \"website\":\"Domínio da empresa\",\n     [...]\n}"
            tags:
                - Empresas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: et
                            required:
                                - api_token
                                - dominio
        get:
            summary: 'Detalhes empresa.'
            description: 'Retorna os detalhes da empresa.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n{\n     \"id\":1,\n     \"nome\":\"Nome da empresa\",\n     \"website\":\"Domínio da empresa\",\n     [...]\n}"
            tags:
                - Empresas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: sunt
                            required:
                                - api_token
                                - dominio
        delete:
            summary: 'Deletar empresa.'
            description: "Deleta a empresa.\nUsa softDeletes()"
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Company deletada!'
                                properties:
                                    message: { type: string, example: 'Company deletada!' }
            tags:
                - Empresas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: et
                            required:
                                - api_token
                                - dominio
        parameters:
            -
                in: path
                name: id
                description: 'ID do usuario proprietario da empresa'
                example: 1
                required: true
                schema:
                    type: integer
    /v1/address:
        post:
            summary: 'Criar Endereço'
            description: 'Cria uma Endereço'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"rua\": \"Nome da rua\",\n     \"numero\": 322,\n     \"bairro\": \"bairro\"\n     [...]\n}"
            tags:
                - Endereço
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: odio
                                empresa_id:
                                    type: integer
                                    description: 'ID da empresa'
                                    example: 1
                                user_id:
                                    type: integer
                                    description: 'ID do usuário'
                                    example: 7
                                rua:
                                    type: string
                                    description: 'Nome da rua'
                                    example: enim
                                numero:
                                    type: integer
                                    description: 'Numero do endereço'
                                    example: 14
                                bairro:
                                    type: string
                                    description: 'Nome do bairro'
                                    example: eveniet
                                complemento:
                                    type: string
                                    description: Complemento
                                    example: fugit
                                cidade:
                                    type: string
                                    description: 'Nome da cidade'
                                    example: vel
                                uf:
                                    type: string
                                    description: 'Sigla do estado <small>Ex: MG</small>'
                                    example: ipsam
                                pais:
                                    type: string
                                    description: País
                                    example: rerum
                                cep:
                                    type: string
                                    description: 'Cep da rua'
                                    example: nobis
                                padrao:
                                    type: boolean
                                    description: 'Se o endereço é o padrão'
                                    example: false
                                ativo:
                                    type: boolean
                                    description: 'Se o endereço está ativo ou não. <small>Default: 1</small>'
                                    example: true
                            required:
                                - api_token
                                - dominio
                                - empresa_id
                                - user_id
                                - rua
                                - numero
    '/v1/address/{id}':
        put:
            summary: 'Atualizar Endereço'
            description: 'Atualiza os dados do endereço'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"rua\": \"Nome da rua\",\n     \"numero\": 322,\n     \"bairro\": \"bairro\"\n     [...]\n}"
            tags:
                - Endereço
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: incidunt
                                rua:
                                    type: string
                                    description: 'Nome da rua'
                                    example: incidunt
                                numero:
                                    type: integer
                                    description: 'Numero do endereço'
                                    example: 6
                                bairro:
                                    type: string
                                    description: 'Nome do bairro'
                                    example: consequatur
                                complemento:
                                    type: string
                                    description: Complemento
                                    example: distinctio
                                cidade:
                                    type: string
                                    description: 'Nome da cidade'
                                    example: omnis
                                uf:
                                    type: string
                                    description: 'Sigla do estado <small>Ex: MG</small>'
                                    example: temporibus
                                pais:
                                    type: string
                                    description: País
                                    example: est
                                cep:
                                    type: string
                                    description: 'Cep da rua'
                                    example: error
                                padrao:
                                    type: boolean
                                    description: 'Se o endereço é o padrão'
                                    example: true
                                ativo:
                                    type: boolean
                                    description: 'Se o endereço está ativo ou não. <small>Default: 1</small> * @param Request $request'
                                    example: true
                            required:
                                - api_token
                                - dominio
                                - rua
                                - numero
        get:
            summary: 'Detalhes Endereço'
            description: 'Retorna os detalhes do endereço'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"rua\": \"Nome da rua\",\n     \"numero\": 322,\n     \"bairro\": \"bairro\"\n     [...]\n}"
            tags:
                - Endereço
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: aut
                            required:
                                - api_token
                                - dominio
        delete:
            summary: 'Deletar Endereço'
            description: 'Deleta o endereço'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"message\": \"Endereço deletado!\",\n}"
            tags:
                - Endereço
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: nihil
                            required:
                                - api_token
                                - dominio
        parameters:
            -
                in: path
                name: id
                description: 'ID da endereço'
                example: 2
                required: true
                schema:
                    type: integer
    /v1/users:
        get:
            summary: Read
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                400:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'É necessário informar o domínio!'
                                properties:
                                    message: { type: string, example: 'É necessário informar o domínio!' }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                            required:
                                - api_token
        post:
            summary: 'Criar usuário'
            description: 'Cria um usuário.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\":1,\n     \"name\": \"Nome usuario\",\n     \"email\": \"teste@estoqueintegrado.com\"\n     [...]\n}"
            tags:
                - Usuarios
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: ut
                                name:
                                    type: string
                                    description: 'Nome do usuário'
                                    example: quos
                                cpf:
                                    type: string
                                    description: 'Cpf com ou sem formatação Ex: 111.111.111-11'
                                    example: omnis
                                email:
                                    type: string
                                    description: 'Email do usuário Ex: teste@estoqueintegrado.com'
                                    example: corporis
                                password:
                                    type: string
                                    description: 'Senha do usuário'
                                    example: inventore
                                celular:
                                    type: string
                                    description: 'Celular do usuário'
                                    example: nisi
                            required:
                                - api_token
                                - dominio
                                - name
                                - cpf
                                - email
    /migrar-estoque:
        get:
            summary: 'Routers do Tamanhos'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                400:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'É necessário informar o domínio!'
                                properties:
                                    message: { type: string, example: 'É necessário informar o domínio!' }
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                            required:
                                - api_token
    /v1/products:
        post:
            summary: 'Criar produto'
            description: 'Cria um produto'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\": \"Nome produto\",\n     \"slug\": \"slug-do-produto\",\n     \"estoque\": [\n         \"id\":1,\n         \"sku\":\"sku-produto\",\n         \"quantidade\":10,\n         \"tamanho_id\":15,\n         \"cor_id\":11,\n     ]\n     [...]\n}"
            tags:
                - Produtos
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: sunt
                                estoque:
                                    type: array
                                    description: "Array de estoque <br><i><small>\n[{ <br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"sku\":\"sku-produto\",<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"quantidade\":5,<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"valor_venda\":1899.90<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"cor_id\":356<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"tamanho_id\":199<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"dt_inicio_promocao\": \"25/10/2021 15:00:00\"<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"dt_fim_promocao\": \"25/10/2021 15:00:00\"<br>\n},<br>\n{<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"sku\":\"sku-produto\",<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;[...] <br>\n}]\n</small></i>"
                                    example: deserunt
                                categoria_id:
                                    type: integer
                                    description: 'ID da categoria cadastrada e ativa do produto'
                                    example: 15
                                nome:
                                    type: string
                                    description: 'Nome do produto'
                                    example: rerum
                                imagens:
                                    type: array
                                    description: 'Array de fotos do produto. <i><small>Maximo: 5 fotos</i></small>'
                                    example: laudantium
                                slug:
                                    type: string
                                    description: 'Slug do produto <br><i><small>Ex: calca_preta_jeans</i></small>'
                                    example: tenetur
                                descricao_curta:
                                    type: string
                                    description: 'Descrição simples do produto'
                                    example: alias
                                descricao_completa:
                                    type: string
                                    description: 'Descrição detalhada do produto'
                                    example: quidem
                                titulo_seo:
                                    type: string
                                    description: 'Titiulo SEO do produto'
                                    example: incidunt
                                tags_seo:
                                    type: string
                                    description: 'Tags SEO do produto'
                                    example: deserunt
                                descricao_seo:
                                    type: string
                                    description: 'Descrição SEO do produto'
                                    example: consequuntur
                                ativo:
                                    type: boolean
                                    description: 'Status do produto <br><i><small>Ativo = 1, Desativado = 0. Default 1</i></small>'
                                    example: true
                                destaque:
                                    type: boolean
                                    description: 'Se o produto é destaque. <i><small>Default 0</i></small>'
                                    example: false
                                variacao_preco_cor:
                                    type: boolean
                                    description: 'Se o valor do produto varia de acordo com a cor. Default 0'
                                    example: false
                                variacao_preco_tamanho:
                                    type: boolean
                                    description: 'Se o valor do produto varia de acordo com o tamanho. Default 0'
                                    example: true
                            required:
                                - api_token
                                - dominio
                                - categoria_id
                                - nome
                                - slug
    '/v1/products/{id}':
        put:
            summary: 'Atualizar produto'
            description: 'Atualiza os dados de um produto'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\": \"Nome produto\",\n     \"slug\": \"slug-do-produto\",\n     \"estoque\": [\n         \"id\":1,\n         \"sku\":\"sku-produto\",\n         \"quantidade\":10,\n         \"tamanho_id\":15,\n         \"cor_id\":11,\n     ]\n     [...]\n}"
            tags:
                - Produtos
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: illum
                                estoque:
                                    type: array
                                    description: "Array de estoque <br><i><small>\n[{ <br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"id\":11,<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"sku\":\"sku-produto\",<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"quantidade\":5,<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"valor_venda\":1899.90<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"cor_id\":356<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"tamanho_id\":199<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"dt_inicio_promocao\": \"25/10/2021 15:00:00\"<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"dt_fim_promocao\": \"25/10/2021 15:00:00\"<br>\n},<br>\n{<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"id\":11,<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;\"sku\":\"sku-produto\",<br>\n     &nbsp;&nbsp;&nbsp;&nbsp;[...] <br>\n}]\n</small></i>"
                                    example: accusantium
                                categoria_id:
                                    type: integer
                                    description: 'ID da categoria cadastrada e ativa do produto'
                                    example: 3
                                nome:
                                    type: string
                                    description: 'Nome do produto'
                                    example: et
                                imagens:
                                    type: array
                                    description: 'Array de fotos do produto. <i><small>Maximo: 5 fotos</i></small>'
                                    example: enim
                                slug:
                                    type: string
                                    description: 'Slug do produto <br><i><small>Ex: calca_preta_jeans</i></small>'
                                    example: et
                                descricao_curta:
                                    type: string
                                    description: 'Descrição simples do produto'
                                    example: commodi
                                descricao_completa:
                                    type: string
                                    description: 'Descrição detalhada do produto'
                                    example: sint
                                titulo_seo:
                                    type: string
                                    description: 'Titiulo SEO do produto'
                                    example: consequuntur
                                tags_seo:
                                    type: string
                                    description: 'Tags SEO do produto'
                                    example: ullam
                                descricao_seo:
                                    type: string
                                    description: 'Descrição SEO do produto'
                                    example: doloremque
                                ativo:
                                    type: boolean
                                    description: 'Status do produto <br><i><small>Ativo = 1, Desativado = 0. Default 1</i></small>'
                                    example: false
                                destaque:
                                    type: boolean
                                    description: 'Se o produto é destaque. <i><small>Default 0</i></small>'
                                    example: true
                                variacao_preco_cor:
                                    type: boolean
                                    description: 'Se o valor do produto varia de acordo com a cor. Default 0'
                                    example: true
                                variacao_preco_tamanho:
                                    type: boolean
                                    description: 'Se o valor do produto varia de acordo com o tamanho. Default 0'
                                    example: false
                            required:
                                - api_token
                                - dominio
                                - categoria_id
                                - nome
                                - slug
        delete:
            summary: 'Deletar Produto'
            description: 'Deleta um produto com softDeletes'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses: {  }
            tags:
                - Produtos
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: ipsum
                            required:
                                - api_token
                                - dominio
        parameters:
            -
                in: path
                name: id
                description: ''
                example: vel
                required: true
                schema:
                    type: string
    '/v1/products/{idOrSlug}':
        get:
            summary: 'Detalhes do produto'
            description: 'Retorna os detalhes de um produto'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                404:
                    description: ''
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Empresa não encontrada!'
                                properties:
                                    message: { type: string, example: 'Empresa não encontrada!' }
            tags:
                - Produtos
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: dolores
                            required:
                                - dominio
            security: []
        parameters:
            -
                in: path
                name: idOrSlug
                description: 'Optional parameter. integer|string required ID ou slug do produto'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: dolor
    /:
        get:
            summary: 'Index da loja'
            description: "<aside>Retorna a loja de acordo com o domínio ou subdominio. <br>\nRetorna dados, produtos, carrinho (se houver usuario logado) <br>\nEx: minhaempresa.estoqueintegrado.com.br\n</aside>"
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\":\"Nome da empresa\",\n     \"email\":\"email@estoqueintegrado.com\",\n     [...]\n     \"products\": [\n         {\n             \"id\": 1,\n             \"nome\":\"Product 1\",\n             \"sku\":\"CAMISAM_2021\",\n             [...]\n         },\n         {\n             \"id\": 2,\n             \"nome\":\"Product 2\",\n             \"sku\":\"BLUSAP321\",\n         }\n     ],\n     \"cart\": [\n         {\n             \"id\": 1,\n             \"produto_id\":12,\n             \"empresa_id\":99,\n             \"quantidade\":2,\n             [...]\n         },\n         [...]\n     ]\n}"
            tags:
                - Site
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                dominio:
                                    type: string
                                    description: "Dominio da loja registrado no banco de dados. <br>\n<i><small>Ex: minhaloja.estoqueintegrado.com.br | minhaloja.com.br | minhaloja</small>"
                                    example: ea
                            required:
                                - dominio
            security: []
    '/v1/product/{idOrSlug}':
        get:
            summary: 'Detalhes do produto'
            description: 'Retorna um array com 1 único produto'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{[\n     \"id\":1,\n     \"nome\":\"Nome do produto\",\n     \"slug\":\"slug\",\n     [...]\n]}"
            tags:
                - Site
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: consequuntur
                            required:
                                - dominio
            security: []
        parameters:
            -
                in: path
                name: idOrSlug
                description: 'Optional parameter. integer|string required ID ou slug do produto'
                required: true
                schema:
                    type: string
                examples:
                    omitted:
                        summary: 'When the value is omitted'
                        value: ''
                    present:
                        summary: 'When the value is present'
                        value: voluptatibus
    /v1/sizes:
        post:
            summary: 'Criar Tamanho'
            description: 'Cria um tamanho'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\": \"P\",\n     \"empresa_id\": 322,\n}"
            tags:
                - Tamanhos
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: atque
                                nome:
                                    type: string
                                    description: 'Nome do tamanho <small>Ex: 50ml|P|300g</small>'
                                    example: perferendis
                            required:
                                - api_token
                                - dominio
                                - nome
    '/v1/sizes/{id}':
        put:
            summary: 'Atualizar Tamanho'
            description: 'Atualiza os dados do tamanho'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\": \"P\",\n     \"empresa_id\": 322,\n}"
            tags:
                - Tamanhos
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: illo
                                nome:
                                    type: string
                                    description: 'Nome do tamanho <small>Ex: 50ml|P|300g</small>'
                                    example: aut
                            required:
                                - api_token
                                - dominio
                                - nome
        get:
            summary: 'Detalhes Tamanho'
            description: 'Retorna os detalhes do Tamanho'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"nome\": \"P\",\n     \"empresa_id\": 322,\n}"
            tags:
                - Tamanhos
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: dolorem
                            required:
                                - api_token
                                - dominio
        delete:
            summary: 'Deletar Tamanho'
            description: 'Deleta um tamanho'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"message\": \"Tamanho deletado!\",\n}"
            tags:
                - Tamanhos
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                dominio:
                                    type: string
                                    description: "Dominio da empresa <br>\n<i><small>Ex: minhaempresa | minhaempresa.estoqueintegrado.com.br | minhaempresa.com.br</i></small>"
                                    example: sit
                            required:
                                - api_token
                                - dominio
        parameters:
            -
                in: path
                name: id
                description: 'ID do tamanho'
                example: 13
                required: true
                schema:
                    type: integer
    '/v1/users/{id}':
        put:
            summary: 'Atualizar usuario'
            description: 'Atualiza os dados de um usuário'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"name\": \"Ronierison Sena\"\n     \"email\": \"teste@teste.com\"\n     [...]\n}"
                404:
                    description: '404, user not found'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'usuário não encontrado.'
                                properties:
                                    message: { type: string, example: 'usuário não encontrado.' }
            tags:
                - Usuarios
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                            required:
                                - api_token
        get:
            summary: 'Detalhes usuario.'
            description: 'Retorna os detalhes do Usuario.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n{\n     \"id\":1,\n     \"nome\":\"Nome do usuario\",\n     \"email\":\"usuario@estoqueintegrado.com\",\n     [...]"
                404:
                    description: '404, user not found'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'usuário não encontrado.'
                                properties:
                                    message: { type: string, example: 'usuário não encontrado.' }
            tags:
                - Usuarios
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                            required:
                                - api_token
        delete:
            summary: 'Deletar usuario'
            description: 'Deletar um usuário'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"name\": \"Ronierison Sena\"\n     \"email\": \"teste@teste.com\"\n     [...]\n}"
                404:
                    description: '404, user not found'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'usuário não encontrado.'
                                properties:
                                    message: { type: string, example: 'usuário não encontrado.' }
            tags:
                - Usuarios
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                id:
                                    type: integer
                                    description: 'ID do usuário'
                                    example: 11
                            required:
                                - api_token
                                - id
        parameters:
            -
                in: path
                name: id
                description: 'ID do usuário'
                example: 8
                required: true
                schema:
                    type: integer
    /v1/login:
        post:
            summary: Login
            description: "Faz o login do usuario\nSe email e senha coincidirem, gera um md5 da data concatenando com o ID do usuário\ne salva no campo api_token com o tempo definido no arquivo .env TIME_TO_RESET_TOKEN"
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: string
            tags:
                - Usuarios
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                login:
                                    type: string
                                    description: 'Email do usuário'
                                    example: ut
                                password:
                                    type: string
                                    description: 'Senha do usuário'
                                    example: asperiores
                            required:
                                - api_token
                                - login
                                - password
components:
    securitySchemes:
        default: []
security:
    -
        default: []
