openapi: 3.0.3
info:
    title: 'API estoqueintegrado.com'
    description: ''
    version: 1.0.0
servers:
    -
        url: 'http://localhost'
paths:
    /v1/users:
        post:
            summary: 'Criar usuário'
            description: 'Cria um usuário.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\":1,\n     \"name\": \"Nome usuario\",\n     \"email\": \"teste@estoqueintegrado.com\"\n     [...]\n}"
            tags:
                - '1 - Usuarios'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                name:
                                    type: string
                                    description: 'Nome do usuário'
                                    example: autem
                                cpf:
                                    type: string
                                    description: 'Cpf com ou sem formatação Ex: 111.111.111-11'
                                    example: non
                                email:
                                    type: string
                                    description: 'Email do usuário Ex: teste@estoqueintegrado.com'
                                    example: impedit
                                password:
                                    type: string
                                    description: 'Senha do usuário'
                                    example: dicta
                                celular:
                                    type: string
                                    description: 'Celular do usuário'
                                    example: molestiae
                            required:
                                - api_token
                                - name
                                - cpf
                                - email
        get:
            summary: Read
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                401:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Unauthorized.
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                            required:
                                - api_token
    '/v1/users/{id}':
        put:
            summary: 'Atualizar usuario'
            description: 'Atualiza os dados de um usuário'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"name\": \"Ronierison Sena\"\n     \"email\": \"teste@teste.com\"\n     [...]\n}"
                404:
                    description: '404, user not found'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'usuário não encontrado.'
                                properties:
                                    message: { type: string, example: 'usuário não encontrado.' }
            tags:
                - '1 - Usuarios'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                            required:
                                - api_token
        get:
            summary: 'Detalhes usuario.'
            description: 'Retorna os detalhes do Usuario.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n{\n     \"id\":1,\n     \"nome\":\"Nome do usuario\",\n     \"email\":\"usuario@estoqueintegrado.com\",\n     [...]"
                404:
                    description: '404, user not found'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'usuário não encontrado.'
                                properties:
                                    message: { type: string, example: 'usuário não encontrado.' }
            tags:
                - '1 - Usuarios'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                            required:
                                - api_token
        delete:
            summary: 'Deletar usuario'
            description: 'Deletar um usuário'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200, success'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\": 1,\n     \"name\": \"Ronierison Sena\"\n     \"email\": \"teste@teste.com\"\n     [...]\n}"
                404:
                    description: '404, user not found'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'usuário não encontrado.'
                                properties:
                                    message: { type: string, example: 'usuário não encontrado.' }
            tags:
                - '1 - Usuarios'
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                id:
                                    type: integer
                                    description: 'ID do usuário'
                                    example: 2
                            required:
                                - api_token
                                - id
        parameters:
            -
                in: path
                name: id
                description: 'ID do usuário'
                example: 10
                required: true
                schema:
                    type: integer
    /v1/companies:
        post:
            summary: 'Criar empresa.'
            description: 'Cria uma nova empresa.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n     \"id\":1,\n     \"nome\":\"Nome da empresa\",\n     \"website\":\"Domínio da empresa\",\n     [...]\n}"
            tags:
                - Empresas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                user_id:
                                    type: integer
                                    description: 'ID do usuario proprietario da empresa'
                                    example: 14
                                nome:
                                    type: string
                                    description: 'Nome fantasia da empresa'
                                    example: in
                                website:
                                    type: string
                                    description: 'URL customizada da empresa Ex: minhaloja.estoqueintegrado.com|minhaloja.com.br'
                                    example: consectetur
                                razao_social:
                                    type: string
                                    description: 'Razão social da empresa'
                                    example: et
                                cnpj:
                                    type: string
                                    description: 'CNPJ da empresa com ou sem formatação'
                                    example: provident
                                telefone:
                                    type: string
                                    description: 'Telefone da empresa'
                                    example: repellat
                                celular:
                                    type: string
                                    description: 'Celular da empresa'
                                    example: quasi
                                email:
                                    type: string
                                    description: 'Email da empresa'
                                    example: aut
                                logo:
                                    type: string
                                    description: 'Path do caminho da logo salva'
                                    example: velit
                                icone:
                                    type: string
                                    description: 'Path do ícone da empresa'
                                    example: enim
                                matriz:
                                    type: boolean
                                    description: 'Se essa empresa é matriz(1) ou filial (0)'
                                    example: false
                                modo_catalogo:
                                    type: boolean
                                    description: 'Exibir banners na loja. 1 = sim, 0 = não. Default 0'
                                    example: false
                            required:
                                - api_token
                                - user_id
                                - nome
                                - cnpj
    /v1/my-companies:
        get:
            summary: 'Lista de empresas do usuario.'
            description: 'Retorna a lista de empresas que o usuário está associado.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "[{\n     \"id\":1,\n     \"nome\":\"Nome da empresa\",\n     \"website\":\"Domínio da empresa\",\n     [...]\n},\n{\n     \"id\":2,\n     \"nome\":\"Nome da empresa\",\n     \"website\":\"Domínio da empresa\",\n     [...]\n}]"
            tags:
                - Empresas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                id:
                                    type: integer
                                    description: 'ID do usuario'
                                    example: 15
                            required:
                                - api_token
                                - id
    '/v1/companies/{id}':
        put:
            summary: 'Atualizar empresa.'
            description: "Atualiza dados da empresa.\nUsa softDeletes()"
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n\n     \"id\":1,\n     \"nome\":\"Nome da empresa\",\n     \"website\":\"Domínio da empresa\",\n     [...]\n}"
            tags:
                - Empresas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                            required:
                                - api_token
        get:
            summary: 'Detalhes empresa.'
            description: 'Retorna os detalhes da empresa.'
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: "{\n{\n     \"id\":1,\n     \"nome\":\"Nome da empresa\",\n     \"website\":\"Domínio da empresa\",\n     [...]\n}"
            tags:
                - Empresas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                            required:
                                - api_token
        delete:
            summary: 'Deletar empresa.'
            description: "Deleta a empresa.\nUsa softDeletes()"
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    message: 'Empresa deletada!'
                                properties:
                                    message: { type: string, example: 'Empresa deletada!' }
            tags:
                - Empresas
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                            required:
                                - api_token
        parameters:
            -
                in: path
                name: id
                description: 'ID do usuario proprietario da empresa'
                example: 17
                required: true
                schema:
                    type: integer
    /:
        get:
            summary: ''
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: ''
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: 'Lumen (8.2.3) (Laravel Components ^8.0)'
            tags:
                - Endpoints
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                            required:
                                - api_token
    /v1/login:
        post:
            summary: Login
            description: "Faz o login do usuario\nSe email e senha coincidirem, gera um md5 da data concatenando com o ID do usuário\ne salva no campo api_token com o tempo definido no arquivo .env TIME_TO_RESET_TOKEN"
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/json
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                200:
                    description: '200'
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: string
            tags:
                - Usuarios
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                api_token:
                                    type: string
                                    description: 'Authentication key.'
                                    example: b1e04a93c85e3711b2d4972b4d81796c-eccbc87e4b5ce2fe28308fd9f2a7baf3
                                login:
                                    type: string
                                    description: 'Email do usuário'
                                    example: dolorem
                                password:
                                    type: string
                                    description: 'Senha do usuário'
                                    example: nulla
                            required:
                                - api_token
                                - login
                                - password
components:
    securitySchemes:
        default: []
security:
    -
        default: []
